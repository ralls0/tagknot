rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Regola generica per i dati privati dell'utente.
    // Consente a un utente autenticato di leggere e scrivere solo nei propri documenti privati
    // sotto il percorso /artifacts/{appId}/users/{userId}/
    match /artifacts/{appId}/users/{userId}/{documents=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Regole specifiche per la sub-collezione 'profile/data' sotto ogni utente.
    // Questa collezione contiene i dettagli del profilo (username, profileTag, profileImage, followers, following).
    // - Qualsiasi utente autenticato può leggere i profili (necessario per la ricerca utenti e la visualizzazione del profilo di altri).
    // - Solo il proprietario del profilo può creare o aggiornare il proprio profilo.
    match /artifacts/{appId}/users/{userId}/profile/data {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Regole per la collezione di eventi pubblici.
    // Questi eventi sono accessibili a tutti gli utenti autenticati per la lettura (feed, ricerca).
    // La creazione, l'aggiornamento e l'eliminazione sono consentite solo al creatore dell'evento.
    match /artifacts/{appId}/public/data/events/{eventId} {
      allow read: if request.auth != null; // Qualsiasi utente autenticato può leggere

      // Permessi per creazione, aggiornamento ed eliminazione: solo il creatore dell'evento autenticato.
      allow create: if request.auth != null && request.resource.data.creatorId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.creatorId == request.auth.uid;
    }

    // Regole per la collezione di knot pubblici.
    // Simili alle regole per gli eventi pubblici.
    match /artifacts/{appId}/public/data/knots/{knotId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.creatorId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.creatorId == request.auth.uid;
    }

    // Regole per la sub-collezione 'comments' sotto ogni evento pubblico.
    // - Qualsiasi utente autenticato può leggere i commenti.
    // - Qualsiasi utente autenticato può creare un commento.
    // - L'aggiornamento e l'eliminazione di un commento sono consentite solo al creatore del commento.
    match /artifacts/{appId}/public/data/events/{eventId}/comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Regole per la sub-collezione 'notifications' sotto ogni utente.
    // Solo il proprietario delle notifiche può leggerle o marcarle come lette.
    match /artifacts/{appId}/users/{userId}/notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // NUOVE REGOLE PER I GRUPPI
    // Regole per la collezione 'groups' (pubblica, ma con membri specifici)
    // Qualsiasi utente autenticato può leggere i dettagli del gruppo.
    // Solo il creatore del gruppo può aggiornare/eliminare il gruppo.
    // I membri possono essere aggiunti/rimossi solo dal creatore.
    match /artifacts/{appId}/public/data/groups/{groupId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.creatorId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.creatorId == request.auth.uid;
    }

    // Regole per la sub-collezione 'events' all'interno di un gruppo
    // Solo i membri del gruppo possono leggere gli eventi del gruppo.
    // Solo i membri del gruppo possono creare eventi nel gruppo.
    // L'aggiornamento e l'eliminazione sono consentite solo al creatore dell'evento E se è membro del gruppo.
    match /artifacts/{appId}/public/data/groups/{groupId}/events/{eventId} {
      // Per leggere, l'utente deve essere autenticato e il suo UID deve essere nell'array 'members' del gruppo.
      allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/artifacts/$(appId)/public/data/groups/$(groupId)).data.members;
      // Per creare, l'utente deve essere autenticato, il creatore dell'evento e un membro del gruppo.
      allow create: if request.auth != null && request.resource.data.creatorId == request.auth.uid && request.auth.uid in get(/databases/$(database)/documents/artifacts/$(appId)/public/data/groups/$(groupId)).data.members;
      // Per aggiornare/eliminare, l'utente deve essere autenticato, il creatore dell'evento e un membro del gruppo.
      allow update, delete: if request.auth != null && resource.data.creatorId == request.auth.uid && request.auth.uid in get(/databases/$(database)/documents/artifacts/$(appId)/public/data/groups/$(groupId)).data.members;
    }

    // Regole per la sub-collezione 'knots' all'interno di un gruppo
    // Simili alle regole per gli eventi del gruppo.
    match /artifacts/{appId}/public/data/groups/{groupId}/knots/{knotId} {
      // Per leggere, l'utente deve essere autenticato e il suo UID deve essere nell'array 'members' del gruppo.
      allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/artifacts/$(appId)/public/data/groups/$(groupId)).data.members;
      // Per creare, l'utente deve essere autenticato, il creatore del knot e un membro del gruppo.
      allow create: if request.auth != null && request.resource.data.creatorId == request.auth.uid && request.auth.uid in get(/databases/$(database)/documents/artifacts/$(appId)/public/data/groups/$(groupId)).data.members;
      // Per aggiornare/eliminare, l'utente deve essere autenticato, il creatore del knot e un membro del gruppo.
      allow update, delete: if request.auth != null && resource.data.creatorId == request.auth.uid && request.auth.uid in get(/databases/$(database)/documents/artifacts/$(appId)/public/data/groups/$(groupId)).data.members;
    }

    // Permette la lettura della collezione 'profile' per le Collection Group Queries
    // Questo è necessario per la ricerca di utenti per username.
    // NOTA: Questa regola è per collectionGroup, non per documenti specifici.
    match /{path=**}/profile/{docId} {
        allow read: if request.auth != null;
    }

    // Altre collezioni/documenti bloccati per default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}


// rules_version = '2';
// service cloud.firestore {
//   match /databases/{database}/documents {
//     match /{document=**} {
//       allow read, write: if request.auth != null;
//     }
//   }
// }
